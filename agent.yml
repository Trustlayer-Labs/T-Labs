agent:
  name: Compliance Sentinel
  model:
    provider: "gemini"
    api_key: "${GEMINI_API_KEY}"

  triggers:
    - input: tool:portia:slack:user:conversation_history
      conditions:
        - regex: "\\b\\w+@\\w+\\.\\w+\\b"  # email pattern
        - ner: ["PERSON", "PHONE", "ID"]  # named entities
        - custom: check_rag_policy_match  # match against GDPR/SocEng

  planning:
    enabled: true
    logic:
      if:
        - confidence > 0.85
        - memory.flags_this_week >= 2
      then:
        action: auto_escalate
      else:
        action: request_clarification

  clarification:
    message_template: |
      Risk Detected:
      Reason: {risk_reason}
      Policy: {matched_policy}
      Action?
    options:
      - label: "Redact"
        action: redact
      - label: "Escalate"
        action: escalate
        requires_role: "compliance"
      - label: "Ignore"
        action: log_ignore

  memory:
    track:
      by_user:
        fields: ["flags_this_week", "last_flag_time", "ignore_history"]

  constraints:
    - if: user not in "compliance"
      block: escalate

  tools:
    - id: portia:slack:user:list_conversation_ids
    - id: portia:slack:user:conversation_history
    - name: logger
      type: file
      output_path: "./logs/incidents.json"

  execution_steps:
    - use tool:portia:slack:user:list_conversation_ids
    - for each channel:
        use tool:portia:slack:user:conversation_history
          with:
            channel_id: "{{ channel_id }}"
            limit: 20
    - run policy_rag_match on messages
    - if confidence > threshold:
        - act
    - else:
        - clarify
    - log outcome
